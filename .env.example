# GyroDiagnostics Environment Configuration Example
# Copy this file to .env and add your API keys

# =============================================================================
# API KEYS
# =============================================================================

# Google AI Studio API (for Gemini models)
# Get your key at: https://aistudio.google.com/apikey
# Free tier: 1500 requests/day
GOOGLE_API_KEY=your-google-api-key-here

# OpenRouter API (for diverse model access)
# Get your key at: https://openrouter.ai/keys
OPENROUTER_API_KEY=your-openrouter-api-key-here
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1

# =============================================================================
# MODEL CONFIGURATION
# =============================================================================

# Primary Model (the one being evaluated - UNA Synthesist generates measurements)
# Options:
#   - google/gemini-1.5-pro (most capable Google model)
#   - google/gemini-2.0-flash-exp (latest experimental)
#   - openrouter/anthropic/claude-3-5-sonnet (via OpenRouter)
#   - openrouter/openai/gpt-4o (via OpenRouter)
INSPECT_EVAL_MODEL=google/gemini-1.5-pro

# Analyst Ensemble (ONA participants measure differentiation patterns)
# Two primary analysts required for tetrahedral structure (2 UNA Ã— 2 ONA = 4 participants)
# Options:
#   - google/gemini-1.5-flash (fast, reliable)
#   - openrouter/anthropic/claude-3-haiku (fast, cost-effective)
#   - openrouter/openai/gpt-4o-mini (balanced)
#   - openrouter/deepseek/deepseek-r1-0528:free (free tier)
INSPECT_EVAL_MODEL_GRADER_A=google/gemini-1.5-flash
INSPECT_EVAL_MODEL_GRADER_B=openrouter/anthropic/claude-3-haiku

# Backup Analyst (fallback for reliability when primary analysts fail)
# Recommended: Use a different model family from primaries for diversity
INSPECT_EVAL_MODEL_GRADER_BACKUP=openrouter/openai/gpt-4o-mini

# =============================================================================
# EVALUATION CONFIGURATION
# =============================================================================

# Log Configuration
INSPECT_LOG_DIR=./logs
INSPECT_LOG_LEVEL=info
INSPECT_LOG_FORMAT=eval

# Retry and Connection Settings
INSPECT_EVAL_MAX_RETRIES=2
INSPECT_EVAL_MAX_CONNECTIONS=1

# Log File Naming Pattern
INSPECT_EVAL_LOG_FILE_PATTERN={task}_{model}_{id}

# Analyst-Specific Settings (optional)
# INSPECT_ANALYST_RETRIES=2
# INSPECT_ANALYST_TIMEOUT_S=120

# =============================================================================
# NOTES
# =============================================================================

# Tetrahedral Measurement Structure (Kâ‚„ graph):
# - 4 vertices (abstract mathematical structure)
# - 6 edges = 6 turns (measurement channels)
# - 4 participants = 2 UNA Synthesists (epochs) + 2 ONA Analysts (scoring models)
# - Total: 4 analyses per task (2 epochs Ã— 2 analysts), each covering all 6 channels

# Free Model Options (OpenRouter):
# - openrouter/deepseek/deepseek-r1-0528:free
# - openrouter/tngtech/deepseek-r1t2-chimera:free
# - openrouter/moonshotai/kimi-k2:free
# - openrouter/google/gemma-3-27b-it:free
# Note: Free models may have rate limits and availability issues

# Mixed Provider Setup (Recommended):
# - Use Google API for primary model (better quality, generous free tier)
# - Use OpenRouter for analysts (access to diverse models)
# - This balances cost, quality, and reliability
